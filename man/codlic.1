.TH codlic 1 "12 June, 2017" "0.1.3" "codlic man page"
.SH NAME
codlic \- A program for adding license text to code
.SH SYNOPSIS
codlic [options] [files]
.SH DESCRIPTION
codlic is a program that is meant for quickly licensing code files. You can
write them all, then license them all at once. It is written in Common Lisp. I
started a C++ version once but wanted to have fun.

Running codlic requires a license, a way to select files, and a way to select
the comment type to use.

You can specify the license with --license-file or --license-name. Using
--license-name you can specify one of the included licenses such as gplv3 or
mit. Note, these licenses are templates. The relevant information needs to be
filled in with the --license-replace option. This option takes a colon-separated
list of pairs of string separated by "/". You can escape these with a backslash.
The license defaults to MIT. To license using the MIT license with the correct
information, use "--license-name mit --license-replace '<copyright
year>/2017:<copyright holder>/Your Name'". To see the license before using it,
pass the --print-license option.

To determine what comment style to use, one of the easiest options to use is
--auto-detect-comment-type which does a lookup on some preset filetypes. This
option is used by default. You can specify individual comment languages with the
--comment-language option to specify one of the presets, such as c or
lisp.  You can also use custom comment types, such as python style with
--single-comment-string '#' or C with --opening-comment-string "/*",
--closing-comment-string " */", and --continuation-comment-string " *".
Notice the leading spaces in the closing and continuation comment strings, this
is so the formatting lines up.

To choose what files to license, simply pass files as arguments or directories
with some selection options. One way to filter out files is to use the
--filetype-language with a preset such as c or lisp. Another way is to use a
regex. To license files that end in both .c and .cc, you can use
--filetype-regex '.*\\.c|.*\\.cc' or '.*\\.cc?'. By default, codlic attempts to
license every file that is passed to it, but this will probably fail when
licensing a directory when it cannot figure out what comment type to use.
.SH OPTIONS
.IP "--license-name"
Use one of the built in licenses, options are gplv3 and mit. These require you
to edit them for information such as copyright holder, though. This means you
should copy these from the installation directory's data directory, editing
them, and using --license-file. That, or use a recursive sed replacement
command.
.IP "--license-file"
Use the given file as the header to add to code.
.IP "--filetype-language"
Only license files with the given language. Options include c and lisp.
.IP "--filetype-regex"
Only license files that match the given perl-compatible regular expression. For
example, to license all C and C++ files, use ".*\\.c|.*\\.cc" or ".*\\.cc?".
.IP "--comment-language"
License files with the comment type associated with the given language. Options
include c and lisp.
.IP "--auto-detect-comment-type"
Instead of manually specifying how to license the file, attempt to detect the
filetype and use the corresponding comment type accordingly. Currently, it
includes c and lisp.
.IP "--single-comment-string"
The string to put at the beginning of each to comment it. This option can be
used on its own to license files in the Python or Lisp style.
.IP "--opening-comment-string"
What to put at the start of the first line of a block comment for a license. Use
with --closing-comment-string and --continuation-comment-string.
.IP "--closing-comment-string"
What to put at the start of the last line of a block comment for a license. Use
with --opening-comment-string and --continuation-comment-string.
.IP "--continuation-comment-string"
What to put at the start of a line in the middle of a block comment for a
license. Use with --opening-comment-string and --closing-comment-string.
.IP "--non-blank-first-line"
Don't put a blank line with opening-comment-string when using a block comment
style. For example, don't start a file with a line that is just "/*" in C files.
.IP "--skip-file-on-error"
Don't end the licensing process when encountering an error licensing a specific
file.
.IP "--skip-shebang"
If the line starts with a shebang, e.g. "#!/bin/bash", leave that as the first
line, add a blank line, then the license.
.IP "--print-license"
Print the text of the license that would be used in a licensing. You can use
this to find out what to find and replace in the license.
.IP "--license-replace"
Do a search and replace on each line in the license file before using it. The
string passed to this argument is of the form
"search_string1/replace_string1:search_string2/replace_string2". It is a
colon-separated list of search-replace pairs separated by a forward slash.
.IP "--print-languages"
Print the available languages and their filetype regexes. Each listed language
has a corresponding comment type.
.IP "--print-licenses"
Print a list of built-in licenses and the path to their files on the filesystem.
.SH EXAMPLES

License all C files in a directory with the MIT License:

.nf
codlic --license-name mit --filetype-language c --comment-language c \\
.br
	--license-replace "<copyright year>/2017:<copyright holder> Jason Waataja" \\
.br
	my_dir
.fi

License all C++ files in a directory with the gplv3.

.nf
cp /usr/local/share/codlic/license/gplv3 .
.br
sed -i 's/Foobar/your-project/g' gplv3
.br
codlic --license-file ./gplv3 --filetype-regex '.*\\.cc' \\
.br
	--auto-detect-comment-type my_dir
.fi
.SH BUGS
There's a lot of features I know would make it work much better. I might add
them some day.
.SH AUTHOR
Jason Waataja <jasonswaataja@gmail.com>
